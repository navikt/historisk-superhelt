// This file is auto-generated by @hey-api/openapi-ts

export type ProblemDetail = {
    type?: string;
    title?: string;
    status?: number;
    detail?: string;
    instance?: string;
    properties?: {
        [key: string]: unknown;
    };
};

export type SakCreateRequestDto = {
    type: 'PARYKK' | 'ORTOSE' | 'PROTESE' | 'FOTTOY' | 'REISEUTGIFTER';
    person: string;
    tittel?: string;
    begrunnelse?: string;
};

export type SakDto = {
    saksnummer: string;
    type: 'PARYKK' | 'ORTOSE' | 'PROTESE' | 'FOTTOY' | 'REISEUTGIFTER';
    person: string;
    tittel?: string;
    begrunnelse?: string;
    status: 'UNDER_BEHANDLING' | 'TIL_ATTESTERING' | 'INNVILGET' | 'DELVIS_INNVILGET' | 'AVSLATT' | 'HENLAGT' | 'AVVIST';
    vedtak?: 'INNVILGET' | 'AVSLATT' | 'DELVIS_INNVILGET' | 'HENLAGT';
};

export type PersonRequest = {
    fnr: string;
};

export type Person = {
    navn: string;
    fnr: string;
    maskertPersonident: string;
    doed: boolean;
    adressebeskyttelseGradering?: 'FORTROLIG' | 'STRENGT_FORTROLIG' | 'STRENGT_FORTROLIG_UTLAND' | 'UGRADERT';
    verge: boolean;
    avvisningsKode?: 'AVVIST_STRENGT_FORTROLIG_ADRESSE' | 'AVVIST_STRENGT_FORTROLIG_UTLAND' | 'AVVIST_AVDÃ˜D' | 'AVVIST_PERSON_UTLAND' | 'AVVIST_SKJERMING' | 'AVVIST_FORTROLIG_ADRESSE' | 'AVVIST_UKJENT_BOSTED' | 'AVVIST_GEOGRAFISK' | 'AVVIST_HABILITET' | 'UKJENT_PERSON';
    avvisningsBegrunnelse?: string;
};

export type User = {
    name: string;
    roles: Array<'LES' | 'SAKSBEHANDLER' | 'ATTESTANT'>;
};

export type SaksTypeDto = {
    type: 'PARYKK' | 'ORTOSE' | 'PROTESE' | 'FOTTOY' | 'REISEUTGIFTER';
    navn: string;
    beskrivelse: string;
};

export type FindSakerMp0V444Data = {
    body?: never;
    path?: never;
    query: {
        maskertPersonId: string;
    };
    url: '/api/sak';
};

export type FindSakerMp0V444Errors = {
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type FindSakerMp0V444Error = FindSakerMp0V444Errors[keyof FindSakerMp0V444Errors];

export type FindSakerMp0V444Responses = {
    /**
     * OK
     */
    200: Array<SakDto>;
};

export type FindSakerMp0V444Response = FindSakerMp0V444Responses[keyof FindSakerMp0V444Responses];

export type CreateSakData = {
    body: SakCreateRequestDto;
    path?: never;
    query?: never;
    url: '/api/sak';
};

export type CreateSakErrors = {
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type CreateSakError = CreateSakErrors[keyof CreateSakErrors];

export type CreateSakResponses = {
    /**
     * OK
     */
    200: SakDto;
};

export type CreateSakResponse = CreateSakResponses[keyof CreateSakResponses];

export type FindPersonData = {
    body: PersonRequest;
    path?: never;
    query?: never;
    url: '/api/person/';
};

export type FindPersonErrors = {
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type FindPersonError = FindPersonErrors[keyof FindPersonErrors];

export type FindPersonResponses = {
    /**
     * OK
     */
    200: Person;
};

export type FindPersonResponse = FindPersonResponses[keyof FindPersonResponses];

export type GetUserInfoData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/user';
};

export type GetUserInfoErrors = {
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type GetUserInfoError = GetUserInfoErrors[keyof GetUserInfoErrors];

export type GetUserInfoResponses = {
    /**
     * OK
     */
    200: User;
};

export type GetUserInfoResponse = GetUserInfoResponses[keyof GetUserInfoResponses];

export type GetSakBySaksnummerData = {
    body?: never;
    path: {
        saksnummer: string;
    };
    query?: never;
    url: '/api/sak/{saksnummer}';
};

export type GetSakBySaksnummerErrors = {
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type GetSakBySaksnummerError = GetSakBySaksnummerErrors[keyof GetSakBySaksnummerErrors];

export type GetSakBySaksnummerResponses = {
    /**
     * OK
     */
    200: SakDto;
};

export type GetSakBySaksnummerResponse = GetSakBySaksnummerResponses[keyof GetSakBySaksnummerResponses];

export type TypeKodeverkData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/sak/kodeverk/typer';
};

export type TypeKodeverkErrors = {
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type TypeKodeverkError = TypeKodeverkErrors[keyof TypeKodeverkErrors];

export type TypeKodeverkResponses = {
    /**
     * OK
     */
    200: Array<SaksTypeDto>;
};

export type TypeKodeverkResponse = TypeKodeverkResponses[keyof TypeKodeverkResponses];

export type GetPersonMp0V444Data = {
    body?: never;
    path: {
        maskertPersonident: string;
    };
    query?: never;
    url: '/api/person/{maskertPersonident}';
};

export type GetPersonMp0V444Errors = {
    /**
     * Forbidden
     */
    403: ProblemDetail;
    /**
     * Internal Server Error
     */
    500: ProblemDetail;
};

export type GetPersonMp0V444Error = GetPersonMp0V444Errors[keyof GetPersonMp0V444Errors];

export type GetPersonMp0V444Responses = {
    /**
     * OK
     */
    200: Person;
};

export type GetPersonMp0V444Response = GetPersonMp0V444Responses[keyof GetPersonMp0V444Responses];

export type ClientOptions = {
    baseUrl: 'http://localhost:8080' | (string & {});
};